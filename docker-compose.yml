version: '3.8'

services:
  db:
    container_name: db
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${ORIGINATION_DB_NAME},"${PRODUCT_ENGINE_DB_NAME}"
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '5433:5432'
    volumes:
      - ./postgres-data8:/var/lib/postgresql/data8
      - ./create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
    networks:
      - fintech-network

  product-engine:
    image: docker-image-product-engine
    build:
      context: product-engine
      dockerfile: ./Dockerfile
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${PRODUCT_ENGINE_DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=${POSTGRES_DRIVER}
    ports:
      - '8086:8086'
      - '9091:9091'
    depends_on:
      - db
    networks:
      - fintech-network

  origination:
    image: docker-image-origination
    build:
      context: origination
      dockerfile: ./Dockerfile
    restart: always
    environment:
        - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${ORIGINATION_DB_NAME}
        - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
        - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
        - SPRING_DATASOURCE_DRIVER_CLASS_NAME=${POSTGRES_DRIVER}
        - GRPC_CLIENT_GRPC_SERVER_ADDRESS=static://scoring:9095
    ports:
      - '8084:8084'
      - '9094:9094'
    depends_on:
      - db
    networks:
      - fintech-network

  payment-gate:
    image: docker-image-payment-gate
    build:
      context: payment-gate
      dockerfile: ./Dockerfile
    restart: always
    environment:
      - PRODUCT_ENGINE_GRPC_HOST=product-engine
      - PRODUCT_ENGINE_GRPC_PORT=9091
    ports:
      - '8080:8080'
    networks:
      - fintech-network

  api:
    image: docker-image-api
    build:
      context: api
      dockerfile: ./Dockerfile
    restart: always
    environment:
      - ORIGINATION_GRPC_HOST=origination
      - ORIGINATION_GRPC_PORT=9094
    ports:
      - '8083:8083'
    networks:
      - fintech-network

  scoring:
    image: docker-image-scoring
    build:
      context: scoring
      dockerfile: ./Dockerfile
    restart: always
    environment:
      - PRODUCT_ENGINE_GRPC_HOST=product-engine
      - PRODUCT_ENGINE_GRPC_PORT=9091
      - GRPC_CLIENT_GRPC_SERVER_ADDRESS=static://product-engine:9091
    ports:
      - '8087:8087'
      - '9095:9095'
    networks:
      - fintech-network

volumes:
  db:
    driver: local

networks:
  fintech-network:
    driver: bridge