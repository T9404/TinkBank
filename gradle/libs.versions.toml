[versions]
spring-boot = "3.1.4"
grpc = "1.58.0"
logback = "1.4.11"
lombok = "1.18.20"
testcontainers = "1.19.1"
junit-jupiter = "5.10.0"
h2 = "2.1.214"
mail = "3.1.5"

[plugins]
spring = { id = "org.springframework.boot", version.ref = "spring-boot" }
protobuf = { id = "com.google.protobuf", version = "0.9.4" }
liquibase-gradle = { id = "org.liquibase.gradle", version = "2.0.4" }
spring-dependency-management = { id = "io.spring.dependency-management", version = "1.0.6.RELEASE" }

[libraries]
spring-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-starter-parent = { module = "org.springframework.boot:spring-boot-starter-parent", version.ref = "spring-boot" }
spring-grpc = { module = "io.github.lognet:grpc-spring-boot-starter", version = "5.1.0" }
javax-annotation = { module = "javax.annotation:javax.annotation-api", version = "1.3.2" }
protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version = "3.23.0" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version = "3.23.0" }

lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
postgresql = { module = "org.postgresql:postgresql" }
postgresql-driver = { module = "org.postgresql:postgresql", version = "42.6.0" }
validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
liquibase-core = { module = "org.liquibase:liquibase-core" }
kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "spring-boot" }

jdbc = { module = "org.springframework.boot:spring-boot-starter-data-jdbc" }
webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }

grpc-netty-shaded = { module = "io.grpc:grpc-netty-shaded", version.ref = "grpc" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc" }
grps-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
tomcat-annotations-api = { module = "org.apache.tomcat:annotations-api", version = "6.0.53" }
grpc-client-spring-boot-starter = { module = "net.devh:grpc-client-spring-boot-starter", version = "2.15.0.RELEASE" }
grpc-server-spring-boot-starter = { module = "net.devh:grpc-server-spring-boot-starter", version = "2.15.0.RELEASE" }
grps-services = { module = "io.grpc:grpc-services", version.ref = "grpc" }
grpc-stub = { module = "io.grpc:grpc-stub", version = "1.55.1" }

mail = { module = "org.springframework.boot:spring-boot-starter-mail", version.ref = "mail" }

#Test libraries
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
jupiter-testcontainers = { module = "org.testcontainers:junit-jupiter", version = "1.19.1" }
postgresql-testcontainers = { module = "org.testcontainers:postgresql" }
h2database = { module = "com.h2database:h2", version.ref = "h2" }
grps-test = { module = "io.grpc:grpc-testing", version.ref = "grpc" }
rest-assured = { module = "io.rest-assured:rest-assured" }
kafka-test = { module = "org.springframework.kafka:spring-kafka-test" }
kafka-testcontainers = { module = "org.testcontainers:kafka" }
awaitility = { module = "org.awaitility:awaitility" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version = "2.17.0" }
